//using CodeWalker.GameFiles;
//using CodeWalker.Project.Panels;
//using CodeWalker.World;
//using SharpDX;
//using System;
//using System.Collections.Generic;
//using WeifenLuo.WinFormsUI.Docking;

//namespace CodeWalker.Project
//{
//    public interface IProjectForm
//    {
//        DeleteGrassPanel DeleteGrassPanel { get; set; }
//        GameFileCache GameFileCache { get; }
//        bool IsProjectLoaded { get; }
//        ProjectPanel PreviewPanel { get; set; }
//        ProjectExplorerPanel ProjectExplorer { get; set; }
//        object ProjectSyncRoot { get; }
//        RpfManager RpfMan { get; }
//        ThemeBase Theme { get; }
//        WorldForm WorldForm { get; }

//        void AddAudioFileToProject(RelFile rel);
//        void AddBoxOccluderToProject();
//        void AddCarGenToProject();
//        void AddCollisionBoundsToProject();
//        void AddCollisionPolyToProject();
//        void AddCollisionVertexToProject();
//        void AddEntityToProject();
//        void AddGrassBatchToProject();
//        void AddGrassBatchToProject(YmapGrassInstanceBatch batch);
//        void AddLodLightToProject();
//        void AddOccludeModelToProject();
//        void AddOccludeModelTriangleToProject();
//        void AddScenarioChain();
//        void AddScenarioCluster();
//        void AddScenarioClusterPoint();
//        void AddScenarioEntity();
//        void AddScenarioEntityPoint();
//        void AddScenarioToProject(YmtFile ymt);
//        void AddTrainTrackToProject(TrainTrack track);
//        void AddYbnToProject(YbnFile ybn);
//        void AddYddToProject(YddFile ydd);
//        void AddYdrToProject(YdrFile ydr);
//        void AddYftToProject(YftFile yft);
//        void AddYmapToProject(YmapFile ymap);
//        void AddYndToProject(YndFile ynd);
//        void AddYnvToProject(YnvFile ynv);
//        void AddYtdToProject(YtdFile ytd);
//        void AddYtypToProject(YtypFile ytyp);
//        bool AudioFileExistsInProject(RelFile rel);
//        void AutoUpdateYmapFlagsExtents();
//        void BulkEraseGrassInstancesAtMouse(SpaceRayIntersectResult mouseRay);
//        void BulkEraseGrassInstancesAtMouse(SpaceRayIntersectResult mouseRay, Predicate<YmapFile> ymapFilter);
//        void BulkEraseGrassInstancesAtMouse(SpaceRayIntersectResult mouseRay, Predicate<YmapFile> ymapFilter, Predicate<YmapGrassInstanceBatch> batchFilter);
//        bool CanPaintInstances();
//        void CloseProject();
//        bool DeleteArchetype();
//        bool DeleteAudioEmitter();
//        bool DeleteAudioEmitterList();
//        bool DeleteAudioInterior();
//        bool DeleteAudioInteriorRoom();
//        bool DeleteAudioZone();
//        bool DeleteAudioZoneList();
//        bool DeleteBoxOccluder();
//        bool DeleteCarGen();
//        bool DeleteCollisionBounds();
//        bool DeleteCollisionPoly();
//        bool DeleteCollisionVertex();
//        bool DeleteEntity();
//        bool DeleteGrassBatch();
//        bool DeleteLodLight();
//        bool DeleteMloEntity();
//        bool DeleteMloEntity(YmapEntityDef mloEntity);
//        bool DeleteMloEntitySet();
//        bool DeleteMloPortal();
//        bool DeleteMloRoom();
//        bool DeleteNavPoint();
//        bool DeleteNavPoly();
//        bool DeleteNavPortal();
//        void DeleteObject(MapSelection sel);
//        bool DeleteOccludeModel();
//        bool DeleteOccludeModelTriangle();
//        bool DeletePathNode();
//        void DeleteScenarioChain();
//        void DeleteScenarioCluster();
//        void DeleteScenarioEntity();
//        bool DeleteScenarioNode();
//        bool DeleteTrainNode();
//        RpfFileEntry FindParentYmapEntry(uint hash);
//        float GetInstanceBrushRadius();
//        void GetMouseCollision(Camera camera, ref MapSelection curHit);
//        Vector3 GetSpawnPos(float dist);
//        Vector3 GetSpawnPosRel(float dist, Vector3 relPos, Quaternion relRot);
//        void GetVisibleAudioFiles(Camera camera, List<RelFile> rels);
//        void GetVisibleScenarios(Camera camera, List<YmtFile> ymts);
//        void GetVisibleTrainTracks(Camera camera, List<TrainTrack> tracks);
//        void GetVisibleWaterQuads<T>(Camera camera, List<T> quads) where T : BaseWaterQuad;
//        void GetVisibleYbns(Camera camera, List<YbnFile> ybns, Dictionary<YmapEntityDef, YbnFile> interiors);
//        void GetVisibleYmaps(Camera camera, Dictionary<MetaHash, YmapFile> ymaps);
//        void GetVisibleYnds(Camera camera, List<YndFile> ynds);
//        void GetVisibleYnvs(Camera camera, List<YnvFile> ynvs);
//        bool GrassBatchExistsInProject(YmapGrassInstanceBatch batch);
//        void ImportScenarioChain();
//        bool IsCurrentAudioEmitter(AudioPlacement emitter);
//        bool IsCurrentAudioEmitterList(Dat151StaticEmitterList list);
//        bool IsCurrentAudioInterior(Dat151Interior interior);
//        bool IsCurrentAudioInteriorRoom(Dat151InteriorRoom room);
//        bool IsCurrentAudioZone(AudioPlacement zone);
//        bool IsCurrentAudioZoneList(Dat151AmbientZoneList list);
//        bool IsCurrentBoxOccluder(YmapBoxOccluder box);
//        bool IsCurrentCarGen(YmapCarGen cargen);
//        bool IsCurrentCollisionBounds(Bounds bounds);
//        bool IsCurrentCollisionPoly(BoundPolygon poly);
//        bool IsCurrentCollisionVertex(BoundVertex vertex);
//        bool IsCurrentEntity(YmapEntityDef ent);
//        bool IsCurrentLodLight(YmapLODLight lodlight);
//        bool IsCurrentNavPoint(YnvPoint point);
//        bool IsCurrentNavPoly(YnvPoly poly);
//        bool IsCurrentNavPortal(YnvPortal portal);
//        bool IsCurrentOccludeModel(YmapOccludeModel model);
//        bool IsCurrentOccludeModelTriangle(YmapOccludeModelTriangle tri);
//        bool IsCurrentPathNode(YndNode pathnode);
//        bool IsCurrentScenarioNode(ScenarioNode node);
//        bool IsCurrentTrainNode(TrainTrackNode node);
//        Archetype NewArchetype(Archetype copy = null);
//        void NewArchetypesFromYdrs();
//        AudioPlacement NewAudioEmitter(AudioPlacement copy = null, bool copyPosition = false, bool selectNew = true);
//        void NewAudioEmitterList();
//        void NewAudioFile();
//        void NewAudioInterior();
//        void NewAudioInteriorRoom();
//        AudioPlacement NewAudioZone(AudioPlacement copy = null, bool copyPosition = false, bool selectNew = true);
//        void NewAudioZoneList();
//        YmapBoxOccluder NewBoxOccluder(YmapBoxOccluder copy = null, bool copyPosition = false, bool selectNew = true);
//        YmapCarGen NewCarGen(YmapCarGen copy = null, bool copyPosition = false, bool selectNew = true);
//        Bounds NewCollisionBounds(BoundsType type, Bounds copy = null, bool copyPosition = false, bool selectNew = true);
//        BoundPolygon NewCollisionPoly(BoundPolygonType type, BoundPolygon copy = null, bool copyPosition = false, bool selectNew = true);
//        YmapEntityDef NewEntity(YmapEntityDef copy = null, bool copyPosition = false, bool selectNew = true);
//        YmapGrassInstanceBatch NewGrassBatch(YmapGrassInstanceBatch copy = null);
//        YmapLODLight NewLodLight(YmapLODLight copy = null, bool copyPosition = false, bool selectNew = true);
//        YmapEntityDef NewMloEntity(YmapEntityDef copy = null, bool copyTransform = false, bool selectNew = true);
//        YmapEntityDef NewMloEntity(MloArchetype mloArchetype, int roomIndex, CEntityDef entityDef, bool copyTransform = false, bool selectNew = true);
//        MCMloEntitySet NewMloEntitySet(MCMloEntitySet copy = null);
//        MCMloPortalDef NewMloPortal(MCMloPortalDef copy = null);
//        MCMloRoomDef NewMloRoom(MCMloRoomDef copy = null);
//        YnvPoint NewNavPoint(YnvPoint copy = null, bool copyposition = false, bool selectNew = true);
//        YnvPoly NewNavPoly(YnvPoly copy = null, bool copyposition = false, bool selectNew = true);
//        YnvPortal NewNavPortal(YnvPortal copy = null, bool copyposition = false, bool selectNew = true);
//        object NewObject(MapSelection sel, bool copyPosition = false, bool selectNew = true);
//        YmapOccludeModel NewOccludeModel(YmapOccludeModel copy = null, bool copyPosition = false, bool selectNew = true);
//        YmapOccludeModelTriangle NewOccludeModelTriangle(YmapOccludeModelTriangle copy = null, bool copyPosition = false, bool selectNew = true);
//        YndNode NewPathNode(YndNode copy = null, bool copyPosition = false, bool selectNew = true);
//        void NewProject();
//        void NewScenario();
//        ScenarioNode NewScenarioNode(ScenarioNode copy = null, bool copyPosition = false, bool selectNew = true);
//        TrainTrackNode NewTrainNode(TrainTrackNode copy = null, bool copyPosition = false, bool selectNew = true);
//        void NewTrainTrack();
//        void NewYbn();
//        void NewYmap();
//        void NewYnd();
//        void NewYnv();
//        void NewYtyp();
//        void OnWorldSelectionChanged(MapSelection sel);
//        void OnWorldSelectionModified(MapSelection sel);
//        void OpenFiles(string[] files = null);
//        void OpenFolder();
//        void OpenProject();
//        void PaintGrass(SpaceRayIntersectResult mouseRay, InputManager input);
//        void RemoveAudioFileFromProject();
//        void RemoveScenarioFromProject();
//        void RemoveTrainTrackFromProject();
//        void RemoveYbnFromProject();
//        void RemoveYddFromProject();
//        void RemoveYdrFromProject();
//        void RemoveYftFromProject();
//        void RemoveYmapFromProject();
//        void RemoveYndFromProject();
//        void RemoveYnvFromProject();
//        void RemoveYtdFromProject();
//        void RemoveYtypFromProject();
//        void Save(bool saveas = false);
//        void SaveAll();
//        void SaveAllProjectFiles();
//        void SaveAudioFile(bool saveas = false);
//        void SaveProject(bool saveas = false);
//        void SaveScenario(bool saveas = false);
//        void SaveTrainTrack(bool saveas = false);
//        void SaveYbn(bool saveas = false);
//        void SaveYmap(bool saveas = false);
//        void SaveYnd(bool saveas = false);
//        void SaveYnv(bool saveas = false);
//        void SaveYtyp(bool saveas = false);
//        bool ScenarioExistsInProject(YmtFile ymt);
//        void SetAudioFileHasChanged(bool changed);
//        void SetCurrentArchetype(Archetype arch);
//        void SetGrassBatchHasChanged(bool changed);
//        void SetProjectHasChanged(bool changed);
//        void SetProjectItem(object item, bool refreshUI = true);
//        void SetScenarioChainEdge(MCScenarioChainingEdge e);
//        void SetScenarioHasChanged(bool changed);
//        void SetTrainTrackHasChanged(bool changed);
//        void SetYbnHasChanged(bool changed);
//        void SetYmapHasChanged(bool changed);
//        void SetYndHasChanged(bool changed);
//        void SetYnvHasChanged(bool changed);
//        void SetYtypHasChanged(bool changed);
//        void ShowDefaultPanels();
//        void ShowDeleteGrassPanel(bool promote);
//        void ShowDeltasPanel(bool promote);
//        void ShowEditArchetypePanel(bool promote);
//        void ShowEditAudioEmitterListPanel(bool promote);
//        void ShowEditAudioEmitterPanel(bool promote);
//        void ShowEditAudioFilePanel(bool promote);
//        void ShowEditAudioInteriorPanel(bool promote);
//        void ShowEditAudioInteriorRoomPanel(bool promote);
//        void ShowEditAudioZoneListPanel(bool promote);
//        void ShowEditAudioZonePanel(bool promote);
//        void ShowEditMultiPanel(bool promote);
//        void ShowEditProjectManifestPanel(bool promote);
//        void ShowEditProjectPanel(bool promote);
//        void ShowEditScenarioNodePanel(bool promote);
//        void ShowEditScenarioYmtPanel(bool promote);
//        void ShowEditTrainNodePanel(bool promote);
//        void ShowEditTrainTrackPanel(bool promote);
//        void ShowEditYbnBoundPolyPanel(bool promote);
//        void ShowEditYbnBoundsPanel(bool promote);
//        void ShowEditYbnBoundVertexPanel(bool promote);
//        void ShowEditYbnPanel(bool promote);
//        void ShowEditYmapBoxOccluderPanel(bool promote);
//        void ShowEditYmapCarGenPanel(bool promote);
//        void ShowEditYmapEntityPanel(bool promote);
//        void ShowEditYmapGrassBatchPanel(bool promote);
//        void ShowEditYmapLodLightPanel(bool promote);
//        void ShowEditYmapOccludeModelPanel(bool promote);
//        void ShowEditYmapOccludeModelTrianglePanel(bool promote);
//        void ShowEditYmapPanel(bool promote);
//        void ShowEditYndNodePanel(bool promote);
//        void ShowEditYndPanel(bool promote);
//        void ShowEditYnvPanel(bool promote);
//        void ShowEditYnvPointPanel(bool promote);
//        void ShowEditYnvPolyPanel(bool promote);
//        void ShowEditYnvPortalPanel(bool promote);
//        void ShowEditYtypMloEntSetPanel(bool promote);
//        void ShowEditYtypMloPortalPanel(bool promote);
//        void ShowEditYtypMloRoomPanel(bool promote);
//        void ShowEditYtypPanel(bool promote);
//        void ShowGenerateLODLightsPanel(bool promote);
//        void ShowGenerateNavMeshPanel(bool promote);
//        void ShowPanel<T>(bool promote, Func<T> createFunc, Action<T> updateAction, Func<T, bool> findFunc) where T : ProjectPanel;
//        void ShowPreviewPanel<T>(Func<T> createFunc, Action<T> updateAction = null) where T : ProjectPanel;
//        void ShowProjectExplorer();
//        void ShowProjectItem(object item, bool promote);
//        void ShowWelcomePanel();
//        bool TrainTrackExistsInProject(TrainTrack track);
//        MloInstanceData TryGetMloInstance(MloArchetype arch);
//        bool YbnExistsInProject(YbnFile ybn);
//        bool YddExistsInProject(YddFile ydd);
//        bool YdrExistsInProject(YdrFile ydr);
//        bool YftExistsInProject(YftFile yft);
//        bool YmapExistsInProject(YmapFile ymap);
//        bool YndExistsInProject(YndFile ynd);
//        bool YnvExistsInProject(YnvFile ynv);
//        bool YtdExistsInProject(YtdFile ytd);
//        bool YtypExistsInProject(YtypFile ytyp);
//    }
//}